name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_call: {}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --coverage

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest existing tag
        id: last_tag
        run: echo "LAST_TAG=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)" >> $GITHUB_ENV

      - name: Compare version
        id: compare_versions
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          LAST_TAG=${LAST_TAG:-0.0.0}  # If no previous tag, assume 0.0.0

          echo "Last tag: $LAST_TAG"
          echo "New tag: $CURRENT_TAG"

          # Function to compare versions
          version_gt() {
            printf '%s\n%s' "$1" "$2" | sort -V | tail -n 1
          }

          if [ "$(version_gt "$CURRENT_TAG" "$LAST_TAG")" = "$CURRENT_TAG" ]; then
            echo "The new tag is greater. Proceeding..."
          else
            echo "Error: The new tag ($CURRENT_TAG) is not greater than the last one ($LAST_TAG)."
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
          always-auth: true

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run build

      - name: Debug NPM_AUTH_TOKEN
        run: echo "Token is set"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  chromatic:
    needs: [test, publish]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          onlyChanged: true
          exitOnceUploaded: true